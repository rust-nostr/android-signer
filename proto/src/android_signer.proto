syntax = "proto3";

package android_signer;

service AndroidSigner {
  rpc IsExternalSignerInstalled (IsExternalSignerInstalledRequest) returns (IsExternalSignerInstalledReply) {}

  rpc GetPublicKey (GetPublicKeyRequest) returns (GetPublicKeyReply) {}

  rpc SignEvent (SignEventRequest) returns (SignEventReply) {}

  rpc Nip04Encrypt (Nip04EncryptRequest) returns (Nip04EncryptReply) {}

  rpc Nip04Decrypt (Nip04DecryptRequest) returns (Nip04DecryptReply) {}

  rpc Nip44Encrypt (Nip44EncryptRequest) returns (Nip44EncryptReply) {}

  rpc Nip44Decrypt (Nip44DecryptRequest) returns (Nip44DecryptReply) {}
}

message IsExternalSignerInstalledRequest {}

message IsExternalSignerInstalledReply {
  bool installed = 1;
}

message GetPublicKeyRequest {}

message GetPublicKeyReply {
  string public_key = 1;
}

message SignEventRequest {
  // The unsigned event JSON
  string unsigned_event = 1;
  /// Current user public key
  string current_user_public_key = 2;
}

message SignEventReply {
  // The event JSON
  string event = 1;
}

message Nip04EncryptRequest {
  string current_user_public_key = 1;
  string other_public_key = 2;
  string plaintext = 3;
}

message Nip04EncryptReply {
  string ciphertext = 1;
}

message Nip04DecryptRequest {
  string current_user_public_key = 1;
  string other_public_key = 2;
  string ciphertext = 3;
}

message Nip04DecryptReply {
  string plaintext = 1;
}

message Nip44EncryptRequest {
  string current_user_public_key = 1;
  string other_public_key = 2;
  string plaintext = 3;
}

message Nip44EncryptReply {
  string ciphertext = 1;
}

message Nip44DecryptRequest {
  string current_user_public_key = 1;
  string other_public_key = 2;
  string ciphertext = 3;
}

message Nip44DecryptReply {
  string plaintext = 1;
}
