//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: android_signer.proto

package rust.nostr.android.signer.proxy.protobuf;

@kotlin.jvm.JvmName("-initializeisExternalSignerInstalledReply")
public inline fun isExternalSignerInstalledReply(block: rust.nostr.android.signer.proxy.protobuf.IsExternalSignerInstalledReplyKt.Dsl.() -> kotlin.Unit): rust.nostr.android.signer.proxy.protobuf.AndroidSignerProxyProto.IsExternalSignerInstalledReply =
  rust.nostr.android.signer.proxy.protobuf.IsExternalSignerInstalledReplyKt.Dsl._create(rust.nostr.android.signer.proxy.protobuf.AndroidSignerProxyProto.IsExternalSignerInstalledReply.newBuilder()).apply { block() }._build()
public object IsExternalSignerInstalledReplyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: rust.nostr.android.signer.proxy.protobuf.AndroidSignerProxyProto.IsExternalSignerInstalledReply.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: rust.nostr.android.signer.proxy.protobuf.AndroidSignerProxyProto.IsExternalSignerInstalledReply.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): rust.nostr.android.signer.proxy.protobuf.AndroidSignerProxyProto.IsExternalSignerInstalledReply = _builder.build()

    /**
     * <code>bool installed = 1;</code>
     */
    public var installed: kotlin.Boolean
      @JvmName("getInstalled")
      get() = _builder.getInstalled()
      @JvmName("setInstalled")
      set(value) {
        _builder.setInstalled(value)
      }
    /**
     * <code>bool installed = 1;</code>
     */
    public fun clearInstalled() {
      _builder.clearInstalled()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun rust.nostr.android.signer.proxy.protobuf.AndroidSignerProxyProto.IsExternalSignerInstalledReply.copy(block: rust.nostr.android.signer.proxy.protobuf.IsExternalSignerInstalledReplyKt.Dsl.() -> kotlin.Unit): rust.nostr.android.signer.proxy.protobuf.AndroidSignerProxyProto.IsExternalSignerInstalledReply =
  rust.nostr.android.signer.proxy.protobuf.IsExternalSignerInstalledReplyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

