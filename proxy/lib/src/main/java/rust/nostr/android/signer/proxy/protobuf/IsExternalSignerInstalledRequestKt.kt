//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: android_signer.proto

package rust.nostr.android.signer.proxy.protobuf;

@kotlin.jvm.JvmName("-initializeisExternalSignerInstalledRequest")
public inline fun isExternalSignerInstalledRequest(block: rust.nostr.android.signer.proxy.protobuf.IsExternalSignerInstalledRequestKt.Dsl.() -> kotlin.Unit): rust.nostr.android.signer.proxy.protobuf.AndroidSignerProxyProto.IsExternalSignerInstalledRequest =
  rust.nostr.android.signer.proxy.protobuf.IsExternalSignerInstalledRequestKt.Dsl._create(rust.nostr.android.signer.proxy.protobuf.AndroidSignerProxyProto.IsExternalSignerInstalledRequest.newBuilder()).apply { block() }._build()
public object IsExternalSignerInstalledRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: rust.nostr.android.signer.proxy.protobuf.AndroidSignerProxyProto.IsExternalSignerInstalledRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: rust.nostr.android.signer.proxy.protobuf.AndroidSignerProxyProto.IsExternalSignerInstalledRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): rust.nostr.android.signer.proxy.protobuf.AndroidSignerProxyProto.IsExternalSignerInstalledRequest = _builder.build()
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun rust.nostr.android.signer.proxy.protobuf.AndroidSignerProxyProto.IsExternalSignerInstalledRequest.copy(block: rust.nostr.android.signer.proxy.protobuf.IsExternalSignerInstalledRequestKt.Dsl.() -> kotlin.Unit): rust.nostr.android.signer.proxy.protobuf.AndroidSignerProxyProto.IsExternalSignerInstalledRequest =
  rust.nostr.android.signer.proxy.protobuf.IsExternalSignerInstalledRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

